{"version":3,"sources":["components/Person.js","services/serverService.js","App.js","reportWebVitals.js","index.js"],"names":["Person","person","eliminatePerson","name","number","onClick","baseUrl","axios","get","newObject","post","id","put","delete","Filter","props","onChange","Phonebook","useState","message","setMessage","persons","filter","includes","map","serverService","then","response","alert","catch","error","NewPersonForm","onSubmit","submit","value","newName","handleNameChange","newNumber","handleNumberChange","type","Notification","className","App","setPersons","setNewName","setNewNumber","setFilter","errorMessage","setErrorMessage","useEffect","data","event","target","preventDefault","personObject","Math","random","console","log","obj","list","i","length","containsObject","concat","window","confirm","findId","setTimeout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f33d2ee9.chunk.js","sourcesContent":["import React from 'react'\r\nconst Person = ({ person, eliminatePerson }) => {\r\n    return (\r\n      <li>{person.name}  {person.number}  <button onClick={eliminatePerson}>delete</button></li>\r\n    )\r\n  }\r\n  \r\n  export default Person","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  \r\n  return request\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request\r\n  \r\n}\r\n\r\nconst eliminate = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request\r\n}\r\n\r\nexport default { getAll, create, update, eliminate }","import React, { useState, useEffect } from 'react'\nimport Person from './components/Person'\nimport axios from 'axios'\nimport serverService from './services/serverService'\nimport './index.css'\n\nconst Filter = (props) => {\n\n  return(\n    <p>filter shown with  <input onChange={props.onChange}/></p>\n  )\n}\n\nconst Phonebook = (props) => {\n\n\n  const [message, setMessage] = useState('some message')\n\n  const eliminatePerson = (id) => {\n    \n    \n    serverService\n    .eliminate(id)\n    .then(response => {\n      setMessage('id ' + id + ' was deleted')\n      alert(message)\n    })\n    .catch(error => {\n      alert(\n        `the person '${id}' was already deleted from server`\n      )\n      \n    })\n    \n  \n    \n  }  \n\n  return(\n    <div><h2>Numbers</h2>\n \n    <ul>\n    {props.persons.filter(person => person.name.includes(props.filter)).map(person =>\n        <Person key={person.id} person={person} eliminatePerson={() => eliminatePerson(person.id)}/>\n        \n      )}\n    </ul></div>\n  )\n}\n\nconst NewPersonForm = (props) => {\n\n  return(\n    <form onSubmit={props.submit}>\n    <div>\n\n    <h2>Add a new number</h2>\n   \n<div>name: <input value={props.newName} onChange={props.handleNameChange} /></div>\n<div>number: <input value={props.newNumber} onChange={props.handleNumberChange}/></div>\n<div><button type=\"submit\">add</button></div>\n\n    </div>\n  </form>\n  )\n}\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n  \n\n  if (message.includes(\"Added\")){\n\n  return (\n    <div className=\"message\">\n      {message}\n    </div>\n  )} else if (message.includes(\"Error\") && message.includes(\"failed\")){\n    return(\n    <div className=\"error\">\n    {message}\n  </div>)\n  }\n\n  return(\n    <div className=\"invisible\">\n      {message}\n    </div>\n  ) \n\n}\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [filter, setFilter] = useState('')\n  const [errorMessage, setErrorMessage] = useState('Error messages will be displayed here')\n\n  useEffect(() => {\n    serverService\n      .getAll()\n      .then(response => {\n      \n        setPersons(response.data)\n      })\n  }, [])\n\n\n  const handleMessageChange = (event) => {\n    setErrorMessage(event.target.value)\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value)\n  }\n\n\n\n  const addName = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber,\n      id: Math.random(1000)\n    }\n\n    function containsObject(obj, list) {\n      var i;\n      for (i = 0; i < list.length; i++) {\n          if (list[i].name === obj.name) {\n           return true;\n          }\n      }\n      return false;\n  }\n\n  function findId(obj, list){\n    var i;\n    for (i=0; i < list.length; i++){\n      if (list[i].name === obj.name) {\n        return list[i].id;\n       }\n    }\n  }\n\n  console.log(personObject)\n  console.log(persons)\n\n\nif (containsObject(personObject, persons) == false) {\n    serverService\n    .create(personObject)\n    .then(response => {\n      setPersons(persons.concat(response.data))\n      setNewName('')\n      setNewNumber('')\n      setErrorMessage(\"Added \" + personObject.name)\n    })\n    .catch(error => {\n      // this is the way to access the error message\n      \n      setErrorMessage(error.response.data.error)\n    })\n  \n  } else {\n    var r = window.confirm(`${newName} is already added to phonebook, replace the old number with the new one? `);\n              if (r==true){\n                var id = findId(personObject, persons)\n            \n                serverService\n                .update(id, personObject)\n                .then(response => {\n                  setPersons(persons.map(person => person.id !== id ? person : personObject))\n                \n                  setNewName('')\n                  setNewNumber('')\n                })\n                .catch(error => {   \n                   setErrorMessage(\n                  `Note '${personObject.name}' was already removed from server`\n                )\n                setTimeout(() => {\n                  setErrorMessage(null)\n                }, 5000)\n                \n              })\n              } else {\n                alert(\"ok\")\n              }\n  }\n  \n\n\n\n\n    \n  }\n\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification message={errorMessage} />\n      <Filter  onChange={handleFilterChange}></Filter>\n      <NewPersonForm submit={addName} newName={newName} handleNameChange={handleNameChange} newNumber={newNumber} handleNumberChange={handleNumberChange}></NewPersonForm>\n      <Phonebook persons={persons} filter={filter} />\n    </div>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}